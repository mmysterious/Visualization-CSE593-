@model StockDictionaryViewModels

@{
    ViewBag.Title = String.Join(",", Model.StockNames);
}

<script type="text/javascript">
    var keys = @Html.Raw(Json.Serialize(Model.Keys));
    var stockNames = @Html.Raw(Json.Serialize(Model.StockNames));
    var records = @Html.Raw(Json.Serialize(Model.Records));
    var flattenRecords = [];
    var unixStart = new Date(1970, 0, 1, 12);
    stockNames.forEach(function(name) {
        records[name].forEach(function(d) {
            d = JSON.parse(JSON.stringify(d));
            for (var key in d) { d[key] = +d[key]; }
            var date = new Date(unixStart);
            date.setDate(unixStart.getDate()+(+d.Date));
            d.Date = date;
            d.Key = name;
            flattenRecords.push(d);
        })
    })
</script>

<div class="col-md-12">
    <div class="btn-group">
        <button type="button" class="btn btn-success" onclick="selectStreamRiver()">
            stream river
        </button>
        <button type="button" class="btn btn-success" onclick="selectAreaStack()">
            area stack
        </button>
        <button type="button" class="btn btn-success" onclick="selectPath()">
            path
        </button>
        <button type="button" class="btn btn-success" onclick="selectKLine()">
            k-line
        </button>
    </div>
</div>

<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="ctrlPanel" class="col-md-12"></div>
            <div id="chartPanel" class="col-md-12">
                @foreach (var name in Model.StockNames)
                {

                    <h1>@name</h1>

                    <table class="table table-bordered table-hover table-striped">
                        <tr>
                            @foreach (var key in Model.Keys)
                            {
                                <td>@key</td>
                            }
                        </tr>
                        @foreach (var record in Model.Records[name])
                        {
                            <tr>
                                @foreach (var key in Model.Keys)
                                {
                                    if (key == "Date")
                                    {
                                        var unixStart = new DateTime(1970, 1, 1);
                                        unixStart = unixStart.AddDays(int.Parse(record[key]));
                                        <td>@String.Format("{0:yyyy-MM-dd}", unixStart)</td>
                                    }
                                    else
                                    {
                                        <td>@record[key]</td>
                                    }
                                }
                            </tr>
                        }
                    </table>

                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="~/js/d3stack.js"></script>
<script type="text/javascript" src="~/js/g2common.js"></script>

<script type="text/javascript">
    function clearPanel(key){
        var panel = document.getElementById(key);
        while(panel.hasChildNodes()) panel.removeChild(panel.lastChild);
    }

    function selectStreamRiver() {
        clearPanel("ctrlPanel");
        clearPanel("chartPanel");
        var dropdown = d3.select("#ctrlPanel")
                        .append("div")
                        .attr("class", "dropdown");
        dropdown.append("button")
                .attr("class", "btn")
                .attr("data-toggle", "dropdown")
                .attr("id", "keyDropdown")
                .text("keys");
        var ul = dropdown.append("ul")
                .attr("class", "dropdown-menu");
        ul.selectAll("li")
                .data(keys)
                .enter()
                .append("li")
                .append("a")
                .attr("href", "#")
                .attr("tabindex", -1)
                .text(function(d) { return d; })
                .on("click", function(d) {
                    d3.select("#keyDropdown").text(d);
                    clearPanel("chartPanel");
                    addD3Stack("chartPanel", flattenRecords, d);
                });
    }

    function selectAreaStack() {
        clearPanel("ctrlPanel");
        clearPanel("chartPanel");
        var dropdown = d3.select("#ctrlPanel")
                        .append("div")
                        .attr("class", "dropdown");
        dropdown.append("button")
                .attr("class", "btn")
                .attr("data-toggle", "dropdown")
                .attr("id", "keyDropdown")
                .text("keys");
        var ul = dropdown.append("ul")
                .attr("class", "dropdown-menu");
        ul.selectAll("li")
                .data(keys)
                .enter()
                .append("li")
                .append("a")
                .attr("href", "#")
                .attr("tabindex", -1)
                .text(function(d) { return d; })
                .on("click", function(d) {
                    d3.select("#keyDropdown").text(d);
                    clearPanel("chartPanel");
                    addG2Stack("chartPanel", flattenRecords, d);
                });
    }

    function selectPath() {
        clearPanel("ctrlPanel");
        clearPanel("chartPanel");
        ["symbol1", "symbol2", "key"].forEach(function (id) {
            var dropdown = d3.select("#ctrlPanel")
                            .append("div")
                            .attr("class", "dropdown col-md-2");
            dropdown.append("button")
                    .attr("class", "btn")
                    .attr("data-toggle", "dropdown")
                    .attr("id", id)
                    .text(id);
            var ul = dropdown.append("ul")
                    .attr("class", "dropdown-menu");
            var data = id == "key" ? keys : stockNames;
            ul.selectAll("li")
                    .data(data)
                    .enter()
                    .append("li")
                    .append("a")
                    .attr("href", "#")
                    .attr("tabindex", -1)
                    .text(function(d) { return d; })
                    .on("click", function(d) {
                        d3.select("#"+id).text(d);
                        clearPanel("chartPanel");
                        var symbol1 = d3.select("#symbol1").text();
                        var symbol2 = d3.select("#symbol2").text();
                        var key = d3.select("#key").text();
                        if (symbol1=="symbol1" || symbol2=="symbol2" || key=="key") return;
                        addG2Path("chartPanel", flattenRecords, symbol1, symbol2, key);
                    });
        });
    }

    function selectKLine() {
        clearPanel("ctrlPanel");
        clearPanel("chartPanel");
        var dropdown = d3.select("#ctrlPanel")
                        .append("div")
                        .attr("class", "dropdown");
        dropdown.append("button")
                .attr("class", "btn")
                .attr("data-toggle", "dropdown")
                .attr("id", "keyDropdown")
                .text("symbols");
        var ul = dropdown.append("ul")
                .attr("class", "dropdown-menu");
        ul.selectAll("li")
                .data(stockNames)
                .enter()
                .append("li")
                .append("a")
                .attr("href", "#")
                .attr("tabindex", -1)
                .text(function(d) { return d; })
                .on("click", function(d) {
                    d3.select("#keyDropdown").text(d);
                    clearPanel("chartPanel");
                    addG2KLine("chartPanel", flattenRecords, d);
                });
    }

</script>